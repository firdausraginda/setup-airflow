steps:
  # # step 1: authenticate docker with Google Cloud Container Registry
  # - name: 'gcr.io/cloud-builders/gcloud'
  #   entrypoint: 'bash'
  #   args:
  #     - '-c'
  #     - |
  #       gcloud auth configure-docker us-east1-docker.pkg.dev

  # # step 2: build docker image
  # - name: 'gcr.io/cloud-builders/docker'
  #   args:
  #     - 'build'
  #     - '-t'
  #     - 'airflow-main-img:latest'
  #     - '.'

  # # step 3: tag docker image
  # - name: 'gcr.io/cloud-builders/docker'
  #   args:
  #     - 'tag'
  #     - 'airflow-main-img:latest'
  #     - 'us-east1-docker.pkg.dev/alpine-life-350508/docker-base-image/airflow-main-img:latest'

  # # step 4: push docker image to Google Cloud Container Registry
  # - name: 'gcr.io/cloud-builders/docker'
  #   args:
  #     - 'push'
  #     - 'us-east1-docker.pkg.dev/alpine-life-350508/docker-base-image/airflow-main-img:latest'

  # - name: 'gcr.io/cloud-builders/gsutil'
  #   args: ['cp', 'gs://pipeline-ops/creds/ssh-private-key-cloudbuild', './ssh-private-key-cloudbuild']

  # step 5: download private key file from Cloud Storage
  - name: 'gcr.io/cloud-builders/gsutil'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gsutil cp gs://pipeline-ops/creds/ssh-private-key-cloudbuild ./ssh-private-key-cloudbuild
  
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        ls -l \
        && chmod 400 ssh-private-key-cloudbuild \
        && ls -l \
        && ssh -i ./ssh-private-key-cloudbuild cloud_build_ssh_key@34.101.110.221 \
        && ls -l

  # - name: 'gcr.io/cloud-builders/gcloud'
  #   entrypoint: 'bash'
  #   args:
  #     - '-c'
  #     - |
  #       chmod 400 ssh-private-key-cloudbuild \
  #       && ssh -i ./ssh-private-key-cloudbuild cloud_build_ssh_key@34.101.110.221 \
  #       && cd /home/ragindafirdaus01/setup-airflow/ \
  #       && sudo docker compose down \
  #       && sudo docker compose up -d

